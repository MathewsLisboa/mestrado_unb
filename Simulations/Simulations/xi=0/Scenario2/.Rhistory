H2 <- ggplot(temp_min,aes(x=x))+
geom_histogram(aes(y = ..density..),colour='white',fill='#696969',breaks=seq(0,21,1))+
geom_line(aes(x=x,y=dbgev(x, mu=test$par[1],sigma=test$par[2],
xi = test$par[3], delta= test$par[4]), color='BGEV'),size=1)+
##PorLegenda
geom_line(aes(x=x,y=dgev(x, loc=8.9407448, scale = 5.7027691, shape = -0.6542575), color='GEV'),size=1)+
labs(x='Temp. Orvalho',y='Densidade', color='Legenda')+
scale_color_manual(values=colors)+
theme_bw()+
theme(axis.title.y=element_text(colour='black',size=12),
axis.title.x=element_text(colour='black',size=12),
axis.text=element_text(colour='black',size=9.5),
panel.border=element_blank(),
axis.line=element_line(colour='black'),
legend.position = 'top')
H2
H2 <- ggplot(temp_min,aes(x=x))+
geom_histogram(aes(y = ..density..),colour='white',fill='#696969',breaks=seq(0,21,1))+
geom_line(aes(x=x,y=dbgev(x, mu=test$par[1],sigma=test$par[2],
xi = test$par[3], delta= test$par[4]), color='BGEV'),size=1)+
##PorLegenda
geom_line(aes(x=x,y=dgev(x, loc=8.9407448, scale = 5.7027691, shape = -0.6542575), color='GEV'),size=1)+
labs(x='m',y='', color='')+
scale_color_manual(values=colors)+
theme_bw()+
theme(axis.title.y=element_text(colour='black',size=12),
axis.title.x=element_text(colour='black',size=12),
axis.text=element_text(colour='black',size=9.5),
panel.border=element_blank(),
axis.line=element_line(colour='black'),
legend.position = 'top')
H2
plot_grid(H1,H2)
ggsave('D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/painel_temperatura_orvalho.png',
width=158,height=93,units='mm')
6!
6!
factorial(6)
6*5*4*3*2*1
2700/5
mean(tabela_regressao$Umidade_rel)
getwd()
setwd('D:\\Users\\Mathews\\Documents\\Git\\mestrado_unb')
source("BGEV_MLE.r")
source("envelope_function.r")
source("BGEV2_MLE.r")
source("envelope_function2.r")
library(tidyverse)
library(readr)
library(lubridate)
library(stringr)
## lendo os dados da tabela regressão
tabela_regressao <- read_rds(file = 'dados_resumidos/tabela_regressao.rds')
df <- read_rds("dados_resumidos/dados_originais.rds")
tabela_regressao$Precipitacao_media[which(is.na(tabela_regressao$Precipitacao_media))] <- 0
tabela_regressao$estacoes <- ifelse(month(tabela_regressao$Data)%in%c(10,11,12,1,2,3,4),1,0) ### 1 está para meses de verão
### 0 está para meses de invero
tabela_regressao$chuva <- ifelse(tabela_regressao$Precipitacao_media>0,1,0)
###### correlacao #####
par(mfrow=c(1,1))
png("D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/correcoes_cira/TO_VS_U.png",width = 800, height = 500 )
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Umidade_rel,
pch=16, cex=2.2, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'TO', ylab='U',width = 800, height = 500)
dev.off()
png("D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/correcoes_cira/TO_VS_P.png",width = 800, height = 500)
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Pressao_media,
pch=16, cex=2.2, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'TO', ylab='P',width = 800, height = 500)
dev.off()
png("D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/correcoes_cira/TO_VS_vvr.png",width = 800, height = 500)
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Vento_velocidade,
pch=16, cex=2.2, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'TO', ylab='VVR')
dev.off()
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Temperatura_bulbo,
pch=16, cex=1.5, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'Temp. Orvalho', ylab='Temp. do ar seco')
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Radiacao_global,
pch=16, cex=1.5, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'Temp. Orvalho', ylab='Radiação global')
plot( as.factor(tabela_regressao$estacoes),tabela_regressao$Temperatura_orvalho,
pch=16, cex=1.5, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'Estações', ylab='Temp. Orvalho')
plot(as.factor(tabela_regressao$estacoes),tabela_regressao$Umidade_rel,
pch=16, cex=1.5, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'Estações', ylab='Umidade')
mean(tabela_regressao$Umidade_rel)
mean(tabela_regressao$Pressao_media)
getwd()
setwd('D:\\Users\\Mathews\\Documents\\Git\\mestrado_unb')
source("BGEV_MLE.r")
source("envelope_function.r")
source("BGEV2_MLE.r")
source("envelope_function2.r")
library(tidyverse)
library(readr)
library(lubridate)
library(stringr)
## lendo os dados da tabela regressão
tabela_regressao <- read_rds(file = 'dados_resumidos/tabela_regressao.rds')
df <- read_rds("dados_resumidos/dados_originais.rds")
tabela_regressao$Precipitacao_media[which(is.na(tabela_regressao$Precipitacao_media))] <- 0
tabela_regressao$estacoes <- ifelse(month(tabela_regressao$Data)%in%c(10,11,12,1,2,3,4),1,0) ### 1 está para meses de verão
### 0 está para meses de invero
tabela_regressao$chuva <- ifelse(tabela_regressao$Precipitacao_media>0,1,0)
###### correlacao #####
par(mfrow=c(1,1))
png("D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/correcoes_cira/TO_VS_U.png",width = 800, height = 500 )
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Umidade_rel,
pch=16, cex=2.2, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'TO', ylab='U',width = 800, height = 500)
dev.off()
png("D:/Users/Mathews/Documents/Git/mestrado_unb/imagens/correcoes_cira/TO_VS_P.png",width = 800, height = 500)
plot(tabela_regressao$Temperatura_orvalho, tabela_regressao$Pressao_media,
pch=16, cex=2.2, cex.lab=1.5, cex.axis=1.0, cex.main=1.5,xlab = 'TO', ylab='P',width = 800, height = 500)
dev.off()
x1 <- tabela_regressao$Umidade_rel - mean(tabela_regressao$Umidade_rel)
n <- nrow(tabela_regressao)
X<- matrix(c(rep(1,n),x1),ncol=2,byrow=F); #regressor matrix for the median model
y <- tabela_regressao$Temperatura_orvalho
fit_BGEV <- MLE_BGEV(y,X, method="BFGS", maxit=200)
fit_BGEV2 <- MLE_BGEV2(y,X, method="BFGS", maxit=200)
fit_BGEV
fit_BGEV2
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <-
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
#*************Function to be maximized**********************#
log_likelihood <- function(theta)
{
kk1 <- ncol(X)
beta <- theta[1:kk1]
sigma <- theta[(kk1+1.0)]
delta <- theta[(kk1+2.0)]
eta <- as.vector(X%*%beta)
m <- eta #identity link
log_lik <- sum(log(dbgev(y, m, sigma, delta)))#function to be maximized
return(log_lik)
}
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
AIC
BIC
x1 <- tabela_regressao$Umidade_rel - mean(tabela_regressao$Umidade_rel)
n <- nrow(tabela_regressao)
X<- matrix(c(rep(1,n),x1),ncol=2,byrow=F); #regressor matrix for the median model
y <- tabela_regressao$Temperatura_orvalho
fit_BGEV <- MLE_BGEV(y,X, method="BFGS", maxit=200)
fit_BGEV2 <- MLE_BGEV2(y,X, method="BFGS", maxit=200)
fit_BGEV
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
AICc <- AIC + (2*(ncol(X)+2)*((ncol(X)+2)+1))/(nrow(X)-(ncol(X)+2)-1)
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
fit_BGEV <- MLE_BGEV(y,X, method="BFGS", maxit=200)
setwd('D:\\Users\\Mathews\\Documents\\Git\\mestrado_unb')
getwd()
setwd('D:\\Users\\Mathews\\Documents\\Git\\mestrado_unb')
source("BGEV_MLE.r")
source("envelope_function.r")
source("BGEV2_MLE.r")
source("envelope_function2.r")
library(tidyverse)
library(readr)
library(lubridate)
library(stringr)
x1 <- tabela_regressao$Umidade_rel - mean(tabela_regressao$Umidade_rel)
## lendo os dados da tabela regressão
tabela_regressao <- read_rds(file = 'dados_resumidos/tabela_regressao.rds')
df <- read_rds("dados_resumidos/dados_originais.rds")
tabela_regressao$Precipitacao_media[which(is.na(tabela_regressao$Precipitacao_media))] <- 0
tabela_regressao$estacoes <- ifelse(month(tabela_regressao$Data)%in%c(10,11,12,1,2,3,4),1,0) ### 1 está para meses de verão
### 0 está para meses de invero
tabela_regressao$chuva <- ifelse(tabela_regressao$Precipitacao_media>0,1,0)
x1 <- tabela_regressao$Umidade_rel - mean(tabela_regressao$Umidade_rel)
n <- nrow(tabela_regressao)
X<- matrix(c(rep(1,n),x1),ncol=2,byrow=F); #regressor matrix for the median model
y <- tabela_regressao$Temperatura_orvalho
fit_BGEV <- MLE_BGEV(y,X, method="BFGS", maxit=200)
fit_BGEV2 <- MLE_BGEV2(y,X, method="BFGS", maxit=200)
fit_BGEV
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
source("BGEV2_MLE.r")
source("envelope_function.r")
source("BGEV_MLE.r")
source("envelope_function.r")
source("BGEV2_MLE.r")
source("envelope_function2.r")
#*************Function to be maximized**********************#
log_likelihood <- function(theta)
{
kk1 <- ncol(X)
beta <- theta[1:kk1]
sigma <- theta[(kk1+1.0)]
delta <- theta[(kk1+2.0)]
eta <- as.vector(X%*%beta)
m <- eta #identity link
log_lik <- sum(log(dbgev(y, m, sigma, delta)))#function to be maximized
return(log_lik)
}
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
#**********density function**********#
#*
dbgev <- function(y, m, sigma, delta){ #xi=0
# Compute auxiliary variables:
mu <- m - (-sigma*log(-log(0.5)))^(1/(delta+1)) # m is median
T      <- (y-mu)*(abs(y-mu)^delta)
derivate_T <- (delta + 1)*(abs(y-mu)^delta)
# Compute density points
pdf    <- dgev(T, loc=0, scale=sigma, shape=0)*derivate_T
# Return Value
return(pdf)
}
AIC <- -2*ll+2*(ncol(X)+2)
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
x1 <- tabela_regressao$Umidade_rel -  mean(tabela_regressao$Umidade_rel)
x2 <- tabela_regressao$estacoes
x3 <- tabela_regressao$Pressao_media -  mean(tabela_regressao$Pressao_media)
n <- nrow(tabela_regressao)
X<- matrix(c(rep(1,n),x1,x2,x3),ncol=4,byrow=F); #retirando velocidade
y <- tabela_regressao$Temperatura_orvalho
fit_BGEV <- MLE_BGEV(y,X, method="BFGS", maxit=200)
fit_BGEV2 <- MLE_BGEV2(y,X, method="BFGS", maxit=200)
fit_BGEV
fit_BGEV2 ## nice, aqui ele simplesmente nçao gostou de ter pressão na brincadeira
## AIC xi  = 0
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
AICc <- AIC + (2*(ncol(X)+2)*((ncol(X)+2)+1))/(nrow(X)-(ncol(X)+2)-1) ### embora o AICc seja melhor
AIC
BIC
AICc
fit_BGEV2 <- MLE_BGEV2(y,X, method="BFGS", maxit=200)
fit_BGEV2
## AIC xi != 0
ll <- log_likelihood2(c(fit_BGEV2$beta, fit_BGEV2$sigma, fit_BGEV2$xi,fit_BGEV2$delta))
AIC <- -2*ll+2*(ncol(X)+3)
BIC <- -2*ll+(ncol(X)+3)*log((nrow(X)))
#**********density function**********#
dbgev2 <- function(y, m, sigma, xi, delta){ #xi dif 0
# Compute auxiliary variables:
mu <-  m - sign((sigma/xi)*((-log(0.5))^(-xi) -1))*(abs((sigma/xi)*((-log(0.5))^(-xi) -1))^(1/(delta+1)))# m is median
T      <- (y-mu)*(abs(y-mu)^delta)
derivate_T <- (delta + 1)*(abs(y-mu)^delta)
# Compute density points
pdf    <- dgev(T, loc=0, scale=sigma, shape=-xi)*derivate_T
# Return Value
return(pdf)
}
#*************Function to be maximized**********************#
log_likelihood2 <- function(theta)
{
kk1 <- ncol(X)
beta <- theta[1:kk1]
sigma <- theta[(kk1+1.0)]
xi <- theta[kk1+2.0]
delta <- theta[(kk1+3.0)]
eta <- as.vector(X%*%beta)
m <- eta #identity link
log_lik <- sum(log(dbgev2(y, m, sigma, xi, delta)))#function to be maximized
return(log_lik)
}
fit_BGEV
fit_BGEV2 ## nice, aqui ele simplesmente nçao gostou de ter pressão na brincadeira
## AIC xi  = 0
ll <- log_likelihood(c(fit_BGEV$beta, fit_BGEV$sigma, fit_BGEV$delta))
AIC <- -2*ll+2*(ncol(X)+2)
BIC <- -2*ll+(ncol(X)+2)*log((nrow(X)))
AIC
BIC
## AIC xi != 0
ll <- log_likelihood2(c(fit_BGEV2$beta, fit_BGEV2$sigma, fit_BGEV2$xi,fit_BGEV2$delta))
AIC <- -2*ll+2*(ncol(X)+3)
BIC <- -2*ll+(ncol(X)+3)*log((nrow(X)))
AIC
BIC
AICc <- AIC + (2*(ncol(X)+3)*((ncol(X)+3)+1))/(nrow(X)-(ncol(X)+3)-1)
AICc
rm(list=ls())
rm(list=ls())
data50 <- read.table("Estimates_Scenario1_n50.txt", h=T)
#********************MLE estimates of delta****************#
png('boxplot_mle_Scenario1_delta.png', width = 800, height = 500)
dev.off()
setwd("D:/Users/Mathews/Documents/Git/mestrado_unb/Simulations/Simulations/xi=0/Scenario1")
rm(list=ls())
data50 <- read.table("Estimates_Scenario1_n50.txt", h=T)
data100 <- read.table("Estimates_Scenario1_n100.txt", h=T)
data500 <- read.table("Estimates_Scenario1_n500.txt", h=T)
MLE_beta1_n50 <- data50$MLE_beta1;
MLE_beta2_n50 <- data50$MLE_beta2;
MLE_beta3_n50 <- data50$MLE_beta3;
MLE_sigma_n50 <- data50$MLE_sigma;
MLE_delta_n50 <- data50$MLE_delta;
MLE_beta1_n100 <- data100$MLE_beta1;
MLE_beta2_n100 <- data100$MLE_beta2;
MLE_beta3_n100 <- data100$MLE_beta3;
MLE_sigma_n100 <- data100$MLE_sigma;
MLE_delta_n100 <- data100$MLE_delta;
MLE_beta1_n500 <- data500$MLE_beta1;
MLE_beta2_n500 <- data500$MLE_beta2;
MLE_beta3_n500 <- data500$MLE_beta3;
MLE_sigma_n500 <- data500$MLE_sigma;
MLE_delta_n500 <- data500$MLE_delta;
png('boxplot_mle_Scenario1_beta1.png', width = 800, height = 500)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.9,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.5,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta2****************#
png('boxplot_mle_Scenario1_beta2.png', width = 800, height = 500)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("MLE for ", beta[2])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.2,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta3****************#
png('boxplot_mle_Scenario1_beta3.png', width = 800, height = 500)
boxplot(MLE_beta3_n50,MLE_beta3_n100,MLE_beta3_n500, main=expression( paste("MLE for ", beta[3])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(3.75,6.22), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(5.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of sigma****************#
png('boxplot_mle_Scenario1_sigma.png', width = 800, height = 500)
boxplot(MLE_sigma_n50,MLE_sigma_n100,MLE_sigma_n500, main=expression( paste("MLE for ", sigma)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.45,1.85), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of delta****************#
png('boxplot_mle_Scenario1_delta.png', width = 800, height = 500)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("MLE for ", delta)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.45,1.9), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(0.5,0,col=2,lty=2,lwd=2)
dev.off()
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.9,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.9,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.9,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.9,6.1), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0,2), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("MLE for ", beta[2])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(1,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.0,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0,2), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.2,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0,2), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.2,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("MLE for ", beta[2])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(1,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(2.0,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("MLE for ", beta[2])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(1,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(2.0,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta3_n50,MLE_beta3_n100,MLE_beta3_n500, main=expression( paste("MLE for ", beta[3])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.5,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_beta3_n50,MLE_beta3_n100,MLE_beta3_n500, main=expression( paste("MLE for ", beta[3])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.5,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_sigma_n50,MLE_sigma_n100,MLE_sigma_n500, main=expression( paste("MLE for ", sigma)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.45,1.85), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.0,0,col=2,lty=2,lwd=2)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("MLE for ", delta)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.45,1.9), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(0.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("MLE for ", delta)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.45,1.9), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(0.5,0,col=2,lty=2,lwd=2)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("MLE for ", delta)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.54,3.23), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(0.5,0,col=2,lty=2,lwd=2)
rm(list=ls())
data50 <- read.table("Estimates_Scenario1_n50.txt", h=T)
data100 <- read.table("Estimates_Scenario1_n100.txt", h=T)
data500 <- read.table("Estimates_Scenario1_n500.txt", h=T)
#**************************MLE estimates******************************#
MLE_beta1_n50 <- data50$MLE_beta1;
MLE_beta2_n50 <- data50$MLE_beta2;
MLE_beta3_n50 <- data50$MLE_beta3;
MLE_sigma_n50 <- data50$MLE_sigma;
MLE_delta_n50 <- data50$MLE_delta;
MLE_beta1_n100 <- data100$MLE_beta1;
MLE_beta2_n100 <- data100$MLE_beta2;
MLE_beta3_n100 <- data100$MLE_beta3;
MLE_sigma_n100 <- data100$MLE_sigma;
MLE_delta_n100 <- data100$MLE_delta;
MLE_beta1_n500 <- data500$MLE_beta1;
MLE_beta2_n500 <- data500$MLE_beta2;
MLE_beta3_n500 <- data500$MLE_beta3;
MLE_sigma_n500 <- data500$MLE_sigma;
MLE_delta_n500 <- data500$MLE_delta;
#********************MLE estimates of beta1****************#
png('boxplot_mle_Scenario1_beta1.png', width = 800, height = 500)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("MLE for ", beta[1])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0,2), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.2,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta2****************#
png('boxplot_mle_Scenario1_beta2.png', width = 800, height = 500)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("MLE for ", beta[2])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(1,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(2.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta3****************#
png('boxplot_mle_Scenario1_beta3.png', width = 800, height = 500)
boxplot(MLE_beta3_n50,MLE_beta3_n100,MLE_beta3_n500, main=expression( paste("MLE for ", beta[3])),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.5,3), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.5,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of sigma****************#
png('boxplot_mle_Scenario1_sigma.png', width = 800, height = 500)
boxplot(MLE_sigma_n50,MLE_sigma_n100,MLE_sigma_n500, main=expression( paste("MLE for ", sigma)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.45,1.85), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of delta****************#
png('boxplot_mle_Scenario1_delta.png', width = 800, height = 500)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("MLE for ", delta)),
xlab="Sample size",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.54,3.23), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(0.5,0,col=2,lty=2,lwd=2)
dev.off()
rm(list=ls())
setwd("D:/Users/Mathews/Documents/Git/mestrado_unb/Simulations/Simulations/xi=0/Scenario2")
rm(list=ls())
data50 <- read.table("Estimates_Scenario2_n50.txt", h=T)
data100 <- read.table("Estimates_Scenario2_n100.txt", h=T)
data500 <- read.table("Estimates_Scenario2_n500.txt", h=T)
MLE_beta1_n50 <- data50$MLE_beta1;
MLE_beta2_n50 <- data50$MLE_beta2;
MLE_beta3_n50 <- data50$MLE_beta3;
MLE_sigma_n50 <- data50$MLE_sigma;
MLE_delta_n50 <- data50$MLE_delta;
MLE_beta1_n100 <- data100$MLE_beta1;
MLE_beta2_n100 <- data100$MLE_beta2;
MLE_beta3_n100 <- data100$MLE_beta3;
MLE_sigma_n100 <- data100$MLE_sigma;
MLE_delta_n100 <- data100$MLE_delta;
MLE_beta1_n500 <- data500$MLE_beta1;
MLE_beta2_n500 <- data500$MLE_beta2;
MLE_beta3_n500 <- data500$MLE_beta3;
MLE_sigma_n500 <- data500$MLE_sigma;
MLE_delta_n500 <- data500$MLE_delta;
#********************MLE estimates of beta1****************#
png('boxplot_mle_scenario2_beta1.png', width = 800, height = 500)
boxplot(MLE_beta1_n50,MLE_beta1_n100,MLE_beta1_n500, main=expression( paste("EMV para ", beta[1])),
xlab="Tamanho da amostra",ylab="",names=c(50,100,500),outline=T,
ylim=c(2.4,5.15), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(4.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta2****************#
png('boxplot_mle_scenario2_beta2.png', width = 800, height = 500)
boxplot(MLE_beta2_n50,MLE_beta2_n100,MLE_beta2_n500, main=expression( paste("EMV para ", beta[2])),
xlab="Tamanho da amostra",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.1,4.03), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(2.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of beta3****************#
png('boxplot_mle_scenario2_beta3.png', width = 800, height = 500)
boxplot(MLE_beta3_n50,MLE_beta3_n100,MLE_beta3_n500, main=expression( paste("EMV para ", beta[3])),
xlab="Tamanho da amostra",ylab="",names=c(50,100,500),outline=T,
ylim=c(1.47,4.14), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(3.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of sigma****************#
png('boxplot_mle_scenario2_sigma.png', width = 800, height = 500)
boxplot(MLE_sigma_n50,MLE_sigma_n100,MLE_sigma_n500, main=expression( paste("EMV para ", sigma)),
xlab="Tamanho da amostra",ylab="",names=c(50,100,500),outline=T,
ylim=c(0.14,2.34), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.0,0,col=2,lty=2,lwd=2)
dev.off()
#********************MLE estimates of delta****************#
png('boxplot_mle_scenario2_delta.png', width = 800, height = 500)
boxplot(MLE_delta_n50,MLE_delta_n100,MLE_delta_n500, main=expression( paste("EMV para ", delta)),
xlab="Tamanho da amostra",ylab="",names=c(50,100,500),outline=T,
ylim=c(-0.42,3.81), cex=1.0,cex.lab=2.0,cex.axis=1.5,cex.main=2.0, pch=16, col=NULL)
abline(1.0,0,col=2,lty=2,lwd=2)
dev.off()
